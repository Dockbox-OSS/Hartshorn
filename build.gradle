import java.time.LocalDate

/*
 *  Copyright (C) 2020 Guus Lieben
 *
 *  This framework is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 2.1 of the
 *  License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
 *  the GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this library. If not, see {@literal<http://www.gnu.org/licenses/>}.
 */
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'io.franzbecker:gradle-lombok:1.6'
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'org.cadixdev.licenser' version '0.5.0'
    id 'io.freefair.aggregate-javadoc' version '6.0.0-m2'
}

static def getVersionName() {
    return 'git rev-parse --verify --short HEAD'.execute().text.trim()
}

version = getVersionName()
group project.pluginGroup
description 'Common sources for Hartshorn services'
def date = LocalDate.now().toString()

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

subprojects { Project subProject ->
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.cadixdev.licenser'

    license {
        header = rootProject.file("HEADER.txt")
        ignoreFailures = true
        include '**/*.java'
    }

    group project.pluginGroup
    version = "${getVersionName()}-$date"

    sourceCompatibility = 16
    targetCompatibility = 16

    tasks.build {
        dependsOn tasks.updateLicenses
        finalizedBy tasks.clean
    }
}

allprojects {
    plugins.withType(JavaPlugin) {
        repositories {
            mavenCentral()
            maven {
                name 'Jitpack'
                url 'https://jitpack.io'
            }
            // TODO: Deprecated
            jcenter()
        }

        sourceSets {
            impl {
                compileClasspath += main.output
                runtimeClasspath += main.output
            }
            test {
                compileClasspath += impl.output
                runtimeClasspath += impl.output
            }
        }

        configurations {
            include
            implImplementation.extendsFrom(include)
            testImplementation.extendsFrom(include)

            apiInclude
            include.extendsFrom(apiInclude)
            implementation.extendsFrom(apiInclude)

            apiShare
            apiInclude.extendsFrom(apiShare)
            api.extendsFrom(apiShare)

            all*.exclude group: 'junit', module: 'junit'
        }

        compileJava {
            options.compilerArgs << '-parameters'
            options.encoding = 'UTF-8'
        }

        compileTestJava {
            options.compilerArgs << '-parameters'
            options.encoding = 'UTF-8'
        }

        test {
            useJUnitPlatform()
        }

        tasks.withType(Javadoc) {
            failOnError false
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
            options.addStringOption('charSet', 'UTF-8')
        }

        dependencies {
            // Typically included by platforms
            apiInclude "org.slf4j:slf4j-api:$slf4jVersion"
            apiInclude "com.google.guava:guava:${guavaVersion}"
            apiInclude group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

            // Compile/source dependencies
            apiInclude("org.jetbrains:annotations:$jetbrainsAnnotationsVersion")

            // Lombok
            apiInclude 'org.projectlombok:lombok:1.18.20'

            annotationProcessor 'org.projectlombok:lombok:1.18.20'
            implAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
            testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

            // Testing requirements
            testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
            testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
            testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
            testImplementation "org.hamcrest:java-hamcrest:$hamcrestVersion"

            testImplementation "org.mockito:mockito-inline:$mockitoVersion"

            testImplementation testFixtures(project(":hartshorn-test"))

            testImplementation "org.slf4j:slf4j-api:$slf4jVersion"
            testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
        }
    }
}

wrapper { gradleVersion = '7.0' }
