/*
 *  Copyright (C) 2020 Guus Lieben
 *
 *  This framework is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 2.1 of the
 *  License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
 *  the GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this library. If not, see {@literal<http://www.gnu.org/licenses/>}.
 */

rootProject.name = 'Hartshorn'
gradle.startParameter.continueOnFailure = true

includeAll(rootDir, '')

def includeAll(final File dir, final String prefix) {
    dir.listFiles().each {
        if (it.directory && new File(it, "${it.name}.gradle").exists()) {
            include("${prefix}:${it.name}")
            // Include all nested projects
            includeAll(it, it.name)
        }
    }
}

rootProject.children.each { final project ->
    project.buildFileName = "${project.name}.gradle"
}
