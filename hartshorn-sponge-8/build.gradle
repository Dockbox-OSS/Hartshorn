import org.spongepowered.gradle.vanilla.repository.MinecraftPlatform

import java.time.LocalDate

/*
 *  Copyright (C) 2020 Guus Lieben
 *
 *  This framework is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 2.1 of the
 *  License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
 *  the GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this library. If not, see {@literal<http://www.gnu.org/licenses/>}.
 */

buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}

plugins {
    id 'java'
    id 'org.spongepowered.plugin' version '0.9.0'
    id 'org.spongepowered.gradle.vanilla' version "0.2"
}

apply plugin: 'com.github.johnrengelman.shadow'

archivesBaseName = 'hartshorn-sponge-api8'
group = project.pluginGroup
description = 'Sponge API8.x implementation for Hartshorn'
sponge.plugin.id = pluginId
def date = LocalDate.now().toString()

minecraft {
    version("1.16.5")
    platform(MinecraftPlatform.SERVER)
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
}

def ignoreProjects = ['examples', 'hartshorn-parent', 'hartshorn-service-parent', 'hartshorn-sponge-7', 'hartshorn-nms-1.12']

configurations {
    includeShadow
    include.extendsFrom(includeShadow)
    shadow.extendsFrom(includeShadow)
}

dependencies {
    new File(parent.rootDir, 'hartshorn-minecraft').listFiles().each {
        if (it.directory && new File(it, 'build.gradle').exists()) {
            includeShadow project(":hartshorn-minecraft:${it.name}")
        }
    }

    parent.rootDir.listFiles().each {
        if ((!ignoreProjects.contains(it.name)) && it.directory && new File(it, 'build.gradle').exists()) {
            includeShadow project(":${it.name}")
        }
    }

    compileOnly "org.spongepowered:spongeapi:$spongeApi8Version"
}

shadowJar {
    configurations = [project.configurations.shadow]
}

task copyArtifacts {
    doLast {
        def version = getVersionName()
        def DIST_DEST_DIR = "${rootDir}/dist/${date}/${version}"
        def DIRT_SRC_DIR = "${buildDir}/libs"

        ant.mkdir(dir: DIST_DEST_DIR)
        println("Copying all built files to $DIST_DEST_DIR")
        ant.copy(todir: DIST_DEST_DIR) {
            fileset dir: DIRT_SRC_DIR,
                    includes: "*${version}-${date}*.jar"
        }

    }
}

build.finalizedBy copyArtifacts
