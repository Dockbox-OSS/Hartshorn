package org.dockbox.hartshorn.blockregistry.init;

import org.dockbox.hartshorn.blockregistry.init.VanillaProps.ModGroups;
import org.dockbox.hartshorn.blockregistry.init.VanillaProps.RenderLayer;
import org.dockbox.hartshorn.blockregistry.init.VanillaProps.TypeList;

public class CropsInit {

    public static void init() {
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("hemp")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("tobacco")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("flax")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("barley")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("heirloom_wheat_crops")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("wild_wheat")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("rice")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("corn")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("peas")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("common_beans")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("bean_pole")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("cabbage")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("turnips")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .name("wheat")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .render(RenderLayer.CUTOUT)
                .name("potatoes")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .render(RenderLayer.CUTOUT)
                .name("carrots")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
        VanillaProps.plants()
                .group(ModGroups.CROPS)
                .render(RenderLayer.CUTOUT)
                .name("beetroots")
                .manual()
                .randomTick(true)
                .register(TypeList.of(Void.class));
    }
}
