<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (C) 2020 Guus Lieben
  ~  
  ~  This framework is free software; you can redistribute it and/or modify
  ~  it under the terms of the GNU Lesser General Public License as
  ~  published by the Free Software Foundation, either version 2.1 of the
  ~  License, or (at your option) any later version.
  ~  
  ~  This library is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
  ~  the GNU Lesser General Public License for more details.
  ~  
  ~  You should have received a copy of the GNU Lesser General Public License
  ~  along with this library. If not, see {@literal<http://www.gnu.org/licenses/>}.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dockbox</groupId>
    <artifactId>selene</artifactId>
    <version>3.0.0-alpha</version>
    <packaging>pom</packaging>
    <name>Selene</name>

    <modules>
        <module>selene-core</module>
        <module>selene-common</module>
        <module>sponge-112</module>
        <module>extensions</module>
        <module>sponge-extensions</module>
    </modules>

    <properties>
        <!-- General -->
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd_HH-mm</maven.build.timestamp.format>

        <!-- Build -->
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <build.target.name>selene-${project.artifactId}-${project.version}-${timestamp}</build.target.name>

        <!-- Kotlin -->
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <experimentalCoroutines>enable</experimentalCoroutines>

        <!-- Versions -->
        <!-- Languages -->
        <kotlin.version>1.4.10</kotlin.version>
        <java.version>1.8</java.version>
        <!-- Maven plugins -->
        <git-commit-id-plugin.version>4.0.2</git-commit-id-plugin.version>
        <dokka.version>0.10.0</dokka.version>
        <!-- Plugin versions -->
        <fawe.version>latest</fawe.version>
        <worldedit.version>6.1.4-SNAPSHOT</worldedit.version>
        <plotsquared.version>3.1</plotsquared.version>
        <!-- Framework/Library versions-->
        <configurate.version>3.6.1</configurate.version>
        <slf4j.version>1.7.25</slf4j.version>
        <jda.version>4.1.1_155</jda.version>
        <!-- Testing versions -->
        <junit.version>5.3.2</junit.version>
        <mockito.version>1.10.19</mockito.version>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>jitpack</id>
            <name>Jitpack</name>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>fawe</id>
            <name>FastAsyncWorldEdit</name>
            <url>http://ci.athion.net/job/FastAsyncWorldEdit/ws/mvn/</url>
        </repository>
        <repository>
            <id>sk89q</id>
            <name>sk89q</name>
            <url>https://maven.enginehub.org/repo/</url>
        </repository>
        <repository>
            <id>plotsquared</id>
            <name>PlotSquared</name>
            <url>https://plotsquared.com/mvn/</url>
        </repository>
        <repository>
            <id>sponge-repo</id>
            <name>Sponge Maven Repository</name>
            <url>https://repo.spongepowered.org/maven</url>
        </repository>
        <repository>
            <id>lib-m</id>
            <name>Spring Lib M Repository</name>
            <url>https://repo.spring.io/libs-milestone/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Compile only -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>19.0.0</version>
        </dependency>
        <dependency>
            <groupId>net.dv8tion</groupId>
            <artifactId>JDA</artifactId>
            <version>${jda.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- Required plugins for all platforms -->
        <dependency>
            <groupId>com.boydti</groupId>
            <artifactId>fawe-api</artifactId>
            <version>${fawe.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sk89q.worldedit</groupId>
            <artifactId>worldedit-core</artifactId>
            <version>${worldedit.version}</version>
        </dependency>
        <dependency>
            <groupId>com.plotsquared</groupId>
            <artifactId>plotsquared-api</artifactId>
            <version>${plotsquared.version}</version>
        </dependency>

        <!-- Included by some platforms, to be shaded by implementations if not already available -->
        <dependency>
            <groupId>org.spongepowered</groupId>
            <artifactId>configurate-core</artifactId>
            <version>${configurate.version}</version>
        </dependency>

        <!-- Typically included by platforms -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <directory>${basedir}/../dist/${project.artifactId}</directory>
        <finalName>${build.target.name}</finalName>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <reportOutputDirectory>${project.basedir}</reportOutputDirectory>
                    <destDir>docs</destDir>
                </configuration>
                <executions>
                    <execution>
                        <id>aggregate</id>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
            </plugin>
        </plugins>
    </build>

</project>
