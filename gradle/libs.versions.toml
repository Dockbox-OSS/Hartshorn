#
#  Copyright 2019-2022 the original author or authors.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#


#
# Version catalog for all dependencies used throughout the various modules. This catalog
# is used to ensure that the correct version of each dependency is used, no matter which
# module is requesting it.
#
# The catalog consists of three parts:
#  1. Common versions, which may be reused for one or more dependencies
#  2. Dependencies, specifying the group and artifact of the dependency, as well as referring
#     to a version in the common versions section
#  3. Dependency bundles, combining one or more dependencies into a single dependency so that
#     any required siblings can be pulled in as well.
#
# This catalog uses TOML, and is natively supported by Gradle. You can read more about this
# format here: https://docs.gradle.org/current/userguide/platforms.html#sub:conventional-dependencies-toml
#

[versions]
#
# Versions in alphabetical order.
#
antlr = "4.10.1"
caffeine = "3.1.1"
cglib = "3.3.0"
checker = "3.28.0"
derby = "10.16.1.1"
freemarker = "2.3.31"
groovy = "4.0.2"
hamcrest = "2.2"
hibernate = "6.1.5.Final"
httpclient = "4.5.13"
jackson = "2.13.3"
jakarta-annotations = "2.1.1"
jakarta-inject = "2.0.1"
jakarta-persistence = "3.1.0"
jakarta-servlet = "6.0.0"
jetty = "11.0.11"
junit-jupiter = "5.9.0"
javassist = "3.29.1-GA"
logback = "1.2.11"
maria-db = "3.0.7"
mockito-inline = "4.7.0"
mssql = "11.2.0.jre17"
mysql = "8.0.30"
postgresql = "42.5.0"
scala = "2.13.8"
slf4j = "1.7.36"
test-containers = "1.17.3"
woodstox = "4.4.1"

[libraries]
#
# Library groups in alphabetical order.
#
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-dataformat-properties = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-properties", version.ref = "jackson" }
jackson-dataformat-toml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-toml", version.ref = "jackson" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }

jakarta-annotations = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotations" }
jakarta-inject = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject" }
jakarta-persistence = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }
jakarta-servlet = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakarta-servlet" }

jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet", version.ref = "jetty" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }

test-containers = { module = "org.testcontainers:testcontainers", version.ref = "test-containers" }
test-containers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "test-containers" }
test-containers-mysql = { module = "org.testcontainers:mysql", version.ref = "test-containers"}
test-containers-mariadb = { module = "org.testcontainers:mariadb", version.ref = "test-containers"}
test-containers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "test-containers"}
test-containers-mssqlserver = { module = "org.testcontainers:mssqlserver", version.ref = "test-containers"}

#
# Libraries in alphabetical order
#
antlr = { module = "org.antlr:antlr4", version.ref = "antlr" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
cglib = { module = "cglib:cglib", version.ref = "cglib" }
derby = { module = "org.apache.derby:derby", version.ref = "derby" }
derby-tools = { module = "org.apache.derby:derbytools", version.ref = "derby" }
freemarker = { module = "org.freemarker:freemarker", version.ref = "freemarker" }
groovy = { module = "org.apache.groovy:groovy-all", version.ref = "groovy" }
hamcrest = { module = "org.hamcrest:hamcrest-core", version.ref = "hamcrest" }
hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "httpclient" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
maria-db = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "maria-db" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
mssql = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref = "mssql" }
mysql = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
scala = { module = "org.scala-lang:scala-library", version.ref = "scala" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
woodstox = { module = "org.codehaus.woodstox:woodstox-core-asl", version.ref = "woodstox" }
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checker" }

[bundles]
#
# Bundles in alphabetical order.
# Dependencies per bundle should also be in alphabetical order.
#
checkerQual = [
    "checker-qual",
]
databaseDrivers = [
    "derby",
    "derby-tools",
    "maria-db",
    "mssql",
    "mysql",
    "postgresql",
]
databaseTestContainers = [
    "test-containers-mariadb",
    "test-containers-mssqlserver",
    "test-containers-mysql",
    "test-containers-postgresql",
]
hibernate = [
    "antlr",
    "hibernate-core",
    "woodstox",
]
jackson = [
    "jackson-core",
    "jackson-dataformat-properties",
    "jackson-dataformat-toml",
    "jackson-dataformat-xml",
    "jackson-dataformat-yaml",
]
jakarta = [
    "jakarta-annotations",
    "jakarta-inject",
    "jakarta-persistence",
]
jetty = [
    "jetty-server",
    "jetty-servlet",
]
servlet = [
    "jakarta-servlet",
]
test = [
    "hamcrest",
    "junit-jupiter-api",
    "junit-jupiter-params",
    "mockito-inline",
]
testContainers = [
    "test-containers",
    "test-containers-junit",
]
testRuntime = [
    "junit-jupiter-engine",
]
